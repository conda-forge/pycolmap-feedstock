{% set name = "pycolmap" %}
{% set version = "0.6.1" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  - url: https://github.com/colmap/{{ name }}/archive/v{{ version }}.tar.gz
    sha256: 7a8d5a4e0813c44f726c9f7bed1916ce597b7bdce1f9345658e146ac7636407a

build:
  number: 3
  script:
    - set CMAKE_BUILD_TYPE=Release  # [win]
    - set CMAKE_ARGS=-G Ninja  # [win]
    - set CUDAFLAGS=--use-local-env  # [win]
    - {{ PYTHON }} -m pip install . -vv --no-build-isolation
  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version not in (undefined, "None")]
  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version in (undefined, "None")]
  skip: true  # [win and cuda_compiler_version == "11.2"]
  # weigh down cpu implementation and give cuda preference
  track_features:
    - pycolmap-cpu  # [cuda_compiler_version in (undefined, "None")]

requirements:
  build:
    - {{ compiler('cxx') }}
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
    - {{ compiler('cuda') }}                 # [cuda_compiler_version not in (undefined, "None")]
    - cmake
    - make                                   # [unix]
    - ninja
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - pybind11 2.11                          # [build_platform != target_platform]
    - scikit-build                           # [build_platform != target_platform]
    - scikit-build-core                      # [build_platform != target_platform]
    # x11 stuff
    - {{ cdt('mesa-libgl-devel') }}          # [unix and not arm64]
    - {{ cdt('mesa-dri-drivers') }}          # [unix and not arm64]
    - {{ cdt('libselinux') }}                # [linux]
    - {{ cdt('libxcb') }}                    # [linux]
    - {{ cdt('libxdamage') }}                # [linux]
    - {{ cdt('libxfixes') }}                 # [linux]
    - {{ cdt('libxxf86vm') }}                # [linux]
    - {{ cdt('libxext') }}                   # [linux]
    - {{ cdt('libxau') }}                    # [linux]
    - {{ cdt('expat-devel') }}               # [linux]
    - llvm-openmp                            # [osx]
    - libgomp                                # [linux]
  host:
    - pip
    - python
    - scikit-build
    - scikit-build-core
    - pybind11 2.11
    - libboost-devel
    - colmap 3.9
    - libblas
    - libcblas
    - cgal-cpp
    - sqlite
    - flann
    - glog
    - gflags
    - flann
    - freeimage
    - metis
    - ceres-solver
    - glew
    - vlfeat                                 # [unix]
    - gmp                                    # [unix]
    - qt-main
    - gmp                                   # [win]
    - lz4-c
    - cuda-cudart-dev {{ cuda_compiler_version }}  # [(cuda_compiler_version or "").startswith("12")]
    - libcurand-dev                          # [(cuda_compiler_version or "").startswith("12")]
  run:
    - python
    - flann
    - vlfeat
    - numpy
    - __cuda >={{ cuda_compiler_version }}   # [cuda_compiler_version not in (undefined, "None")]

test:
  imports:
    - pycolmap
  commands:
    - pip check
    - python -c "import pycolmap; reconstruction = pycolmap.Reconstruction(); x = reconstruction.points3D"
  requires:
    - pip

about:
  home: https://colmap.github.io/
  license: BSD-3-Clause
  license_file:
    - LICENSE
  summary: pycolmap exposes to Python most COLMAP reconstruction objects, such as Cameras and Points3D, as well as estimators for absolute and relative poses.

extra:
  recipe-maintainers:
    - Tobias-Fischer
